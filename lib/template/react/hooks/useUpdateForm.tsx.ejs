<%_ if (data) { _%>
import { add<%= data.name %>, update<%= data.name %> } from '<%= data.servicesPath %>/<%= data.lowerName %>'
import { Form, message } from 'antd'
import { useEffect } from 'react'

export interface UpdateFormProps {
  onCancel: () => void;
  onSubmit: () => Promise<void>;
  updateModalVisible: boolean;
  values?: any;
}

export const use<%= data.name %>Updateform = (props: UpdateFormProps) => {
  const { updateModalVisible, onCancel, onSubmit, values } = props
  const [form] = Form.useForm()

  useEffect(() => {
    if (updateModalVisible) {
      form.resetFields()
      if (values) {
        form.setFieldsValue({ ...values })
      }
    }
  }, [updateModalVisible, form, values])

  const handleSubmit = async () => {
    try {
      const fieldsValue = await form.validateFields()

      const formData = { ...values, ...fieldsValue }
      if (values?.id) {
        await update<%= data.name %>(formData)
      } else {
        await add<%= data.name %>(formData)
      }
      message.success('操作成功')
      onSubmit?.()
    } catch (error) {
      message.error('操作失败，请重试')
    }
  }

  return {
    updateModalVisible,
    onCancel,
    onSubmit,
    values,
    handleSubmit,
    form
  }
}
<%_ } _%>